name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install
          npm run build

      - name: Run ESLint
        run: npx eslint .
        
  codeql:
    name: Static Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Analyze CodeQL
        uses: github/codeql-action/analyze@v2

  dast:
    name: Dynamic Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Application
        run: |
          npm install
          npm run build
          npm start &
          sleep 10

      - name: Run Dastardly Scan
        continue-on-error: true  # Allows the workflow to continue even if vulnerabilities are found
        uses: PortSwigger/dastardly-github-action@main
        with:
          target-url: 'http://localhost:3000'

      # Optional: Add a report parser to process the results
      - name: Publish Test Report
        if: always()  # Ensures this step runs even if the scan fails
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: '**/dastardly-report.xml'
          require_tests: false

  secrets:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: zricethezav/gitleaks-action@v2
